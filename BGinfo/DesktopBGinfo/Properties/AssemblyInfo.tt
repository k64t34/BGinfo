<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#//@ assembly name="EnvDTE" #>
<#//@ import namespace="EnvDTE" #>

<#
	int incBuild = 1;
	Console.WriteLine("*************************************************************");
	Console.WriteLine("*           Version inc gen                                  ");
	Console.WriteLine("*************************************************************");  
	Console.WriteLine(this.Host.ResolveParameterValue("-", "-", "projects"));
	string output = File.ReadAllText(this.Host.ResolvePath("AssemblyInfo.cs"));
    Regex pattern = new Regex("AssemblyVersion\\(\"(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<build>\\d+)\\.(?<revision>\\d+)\"\\)");
    MatchCollection matches = pattern.Matches(output);	
	 if( matches.Count == 1 )
    {	
		major = Convert.ToInt32(matches[0].Groups["major"].Value);
        minor = Convert.ToInt32(matches[0].Groups["minor"].Value);
        build = Convert.ToInt32(matches[0].Groups["build"].Value) + incBuild;
		//string revision = DateTime.Now.ToString("yyyyMMddHHmmss");
		//revision = Convert.ToInt32(matches[0].Groups["revision"].Value)+incRevision;	
		//IServiceProvider serviceProvider = (IServiceProvider)this.Host;
		//DTE dte = serviceProvider.GetService(typeof(DTE)) as DTE;  
		
        //Number of projects in this solution: dte.Solution.Projects.Count
		Console.WriteLine(major+"."+minor+"."+build+"."+revision);
	}
   	Console.WriteLine("*************************************************************");
#>
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Resources;
using System;
using System.IO;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Text;


#if DEBUG
[assembly: AssemblyConfiguration("DEBUG")]
#else
[assembly: AssemblyConfiguration("Release")]
#endif

// General Information
[assembly: AssemblyTitle("DeskTopBGInfo")]
[assembly: AssemblyDescription("Set text info over wallpaprer for all users")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("BGInfo")]
[assembly: AssemblyCopyright("Skorik (c) 2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]

// Version informationr(
[assembly: AssemblyVersion("<#= this.major #>.<#= this.minor #>.<#= this.build #>.<#= this.revision #>")]
[assembly: AssemblyFileVersion("<#= this.major #>.<#= this.minor #>.<#= this.build #>.<#= this.revision #>")]


<#+
    int major = 1;
    int minor = 0;
    int revision = 0;
    int build = 0;
#>
